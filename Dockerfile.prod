FROM python:3.11-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    FLASK_APP="src:create_app()" \
    FLASK_ENV=production \
    FLASK_DEBUG=0 \
    POETRY_VERSION=1.7.1 \
    POETRY_HOME="/opt/poetry" \
    POETRY_VIRTUALENVS_CREATE=false \
    POETRY_NO_INTERACTION=1

WORKDIR /app

# Install system dependencies (may need additional libs for image processing)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl \
        gcc \
        python3-dev \
        libffi-dev \
        && rm -rf /var/lib/apt/lists/*

# Install poetry separately to avoid memory issues
RUN curl -sSL https://install.python-poetry.org | python3 - \
    && ln -s /opt/poetry/bin/poetry /usr/local/bin/poetry

# Create user
RUN useradd -m appuser

# Copy poetry files
COPY pyproject.toml poetry.lock ./

# Install dependencies with memory optimization
RUN poetry install --no-root --no-dev --no-interaction

# Copy application code
COPY src/ src/

# Set ownership
RUN chown -R appuser:appuser /app
USER appuser

# Health check (adjust port for pixify)
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:5005/api/status || exit 1

# Expose port
EXPOSE 5005

# Use fewer workers for Pi and longer timeout for AI processing
CMD ["poetry", "run", "gunicorn", "--bind", "0.0.0.0:5005", "--workers", "2", "--timeout", "120", "src:create_app()"]